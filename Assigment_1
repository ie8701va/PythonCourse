# -*- coding: utf-8 -*-
"""
Created on Sat Apr  1 12:23:37 2023

@author: Ieva
"""

# Task 1A: Numpy arrays
## 1.1. Importing Numpy as np
import numpy as np

## 1.2. Create arrays 

a = np.array([3,6,4,5])
b = np.array([5,9,1,2])

## 1.3. Size, mean, median and sum of a andb arrays

len(a)
len(b)

np.mean(a)
np.mean(b)

np.median(a)
np.median(b)

np.sum(a)
np.sum(b)

## 1.4. Performing different operations.
### Respective position of numerals in each list is selected and operations performed. 

a+b # adds each numeral to each other from the two different arrays.
a-b # the opposite of above, subtracts the numerals from each other. 
a*b # as the above, multipies the respective numerals by each other.  
a**b # raies the first number in the first list by the power of the second one in its respective position. 
a%b # returns the remainder of dividing the left hand numeral by right hand numeral

## 1.5. Creating odd lists from a and b lists
a_odd = []

for num in a:
  
    # checking condition
    if num % 2 != 0:
        a_odd.append(num)
        
print(a_odd)

b_odd = []

for num in b:
  
    # checking condition
    if num % 2 != 0:
        b_odd.append(num)
        
print(b_odd)


## 1.6. two ways to create an array containing all integer values between 1 and 10000

a0 = list(range(1,10001))
print(a0)    


a1 = np.arange(1,10001).tolist()
print(a1)  

 
a2 = []
for i in range(1,10001):
    a2.append(i)
print(a2)   

# Assignment 1B: Guess the number
import random

random_number = random.randint(1, 100)
print(random_number)


instruction = "I am thinking about a number between 1-100. Take a guess."
too_high = "Sorry, too high. Take another guess."
too_low = "Sorry, too low. Take another guess."
correct_guess = "Nice! You guessed my number in {} guesses!"
out_of_guesses = "You could not guess the number within 6 guesses! Game Over!"



for guesses in range(6):
  print(f"Guesses remaining are {6-guesses}")
  print(instruction)
  number_from_user = int(input())
  
  if random_number==number_from_user:
      print(correct_guess)
      break

  if random_number>number_from_user:
      print(too_low)
        
  if random_number<number_from_user:
      print(too_high)
      
  if guesses == 5:
      print(out_of_guesses)
        

# Assignment 1C: 


initial_question = "Which table do you want to train (0-9)?"
number_from_student = int(input(initial_question))
answer_from_student = None

while answer_from_student != "q":

    random_multiplication_number = random.randint(0, 10)
    multiplication_question = f"What is {number_from_student} * {random_multiplication_number} (press q to quit)?"
    answer_from_student = input(multiplication_question)
        
    if answer_from_student == "q":
        break
    else:
        answer_from_student = int(answer_from_student)
        
    if number_from_student * random_multiplication_number == answer_from_student:
        print("Well done! Continue to the next question.")
    if number_from_student * random_multiplication_number != answer_from_student:
        print(f"Wrong! The correct answer was {number_from_student * random_multiplication_number}.")
